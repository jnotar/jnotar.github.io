value = runif(365) + seq(-140, 224)^2 / 10000
)
# Most basic bubble plot
p <- ggplot(data, aes(x=day, y=value)) +
geom_line() +
xlab("")
p
# hurr data
set.storms <- unite(data = storms, col = "date", month, day, sep = "-", remove = T)
test.storms <- set.storms[1:100, ]
mm <- ggplot(test.storms, aes(x = date, y = name) +
geom_linerange(aes(ymin = date, ymax = date))
?geom_linerange
library(ggplot2)
library(dplyr)
library(tidyr)
?geom_linerange
mm <- ggplot(test.storms, aes(x = date, y = name) +
geom_linerange(aes(ymin = date, ymax = date))
mm <- ggplot(test.storms, aes(x = date, y = name) + geom_point(mapping=aes(x = date, y = rev(name)), data = test.storms)
mm
mm <- ggplot(test.storms, aes(x = date, y = name)) + geom_point(mapping=aes(x = date, y = rev(name)), data = test.storms)
mm
mm <- ggplot(test.storms, aes(x = date, y = name)) +
geom_linerange(aes(ymin = date, ymax = date))
mm
dat$n_days <- with(test.storms,
difftime(EventEndDate, EventStartDate, units='days'))+1
test.storms
test.storms %>% select(name = "Amy")
test.storms %>% select(name == "Amy")
?select
test.storms %>% select("name" == "Amy")
test.storms %>% select("name")
test.storms %>% select("name") == "Amy"
test.storms %>% select("name") %>% filter("Amy")
test.storms %>% filter(name == "Amy")
xx <- test.storms %>% filter(name == "Amy")
xx$date
min(xx$date)
max(xx$date)
?group_by
min(xx$date)
max(xx$date) - min(xx$date)
group_by(test.storms, name)
yy <- group_by(test.storms, name)
min(yy$date)
yy%>% summarise(min(yy$date))
yy%>% summarise(min(yy$date), max(yy$date))
yy%>% summarise(min(date), max(date))
View(test.storms)
yy <- group_by(test.storms, year, name)
yy%>% summarise(min(date), max(date))
yy %>% summarise(min(date), max(date)) %>% begin.end.storms
begin.end.storms <- yy %>% summarise(min(date), max(date)) %>%
xx <- test.storms %>% filter(name == "Amy")
begin.end.storms <- yy %>% summarise(min(date), max(date))
begin.end.storms
dat$n_days <- with(begin.end.storms,
difftime(EventEndDate, EventStartDate, units='days'))+1
dat$n_days <- with(begin.end.storms,
difftime(min(date), max(date), units='days'))+1
?summarise
begin.end.storms <- yy %>% summarise(min = min(date), max = max(date))
begin.end.storms
dat$n_days <- with(begin.end.storms,
difftime(min, max, units='days'))+1
?with
?difftime
difftime(begin.end.storms$min, begin.end.storms$max)
difftime(begin.end.storms$min, begin.end.storms$max, units = "days")
class(begin.end.storms$min)
as.Date(begin.end.storms$min)
as.Date(begin.end.storms$min, "%m/%d")
?as.date
?as.Date
as.Date(begin.end.storms$min, "%m%d")
as.Date(begin.end.storms$min, "%m/%d")
begin.end.storms$min
begin.end.storms[1,]
begin.end.storms[1, 3:4]
as.difftime(begin.end.storms[1, 3:4])
c(begin.end.storms[1, 3:4])
as.vector(begin.end.storms[1, 3:4])
as.vector(begin.end.storms[1, 3:4])
as.difftime(as.vector(begin.end.storms[1, 3:4]))
class(begin.end.storms$min  )
as.difftime(as.vector(begin.end.storms[1, 3]))
as.difftime(begin.end.storms[1, 3])
class(begin.end.storms[1, 3])
as.difftime(begin.end.storms$min)
as.difftime(begin.end.storms$min, units = "days")
as.difftime(begin.end.storms$max - begin.end.storms$min, units = "days")
begin.end.storms$max - begin.end.storms$min
as.difftime(begin.end.storms$max - begin.end.storms$min, format = "%m/%d",units = "days")
as.difftime(begin.end.storms$max, format = "%m/%d",units = "days")
as.difftime(c(begin.end.storms$max, begin.end.storms$min),units = "days")
as.difftime(c(begin.end.storms$max, begin.end.storms$min), format = "%m/%d",units = "days")
as.difftime(c(begin.end.storms$max, begin.end.storms$min), format = "%m:%d",units = "days")
as.difftime(c(begin.end.storms$max, begin.end.storms$min), format = "%M:%D",units = "days")
as.difftime(c("0:3:20", "11:23:15"))
yy <- group_by(test.storms, year, name)
begin.end.storms <- yy %>% summarise(min = min(date), max = max(date))
begin.end.storms
ggplot(test.storms, aes(y=year, x=date, color=name)) +
geom_point(shape=21) +
labs(title='Events by Date', y='Object ID') +
theme_bw() + theme(legend.position='bottom')
?geom_line
ggplot(test.storms, aes(y=year, x=date, color=name)) +
geom_line()
# geom_point(shape=21) +
labs(title='Events by Date', y='Object ID') +
theme_bw() + theme(legend.position='bottom')
ggplot(test.storms, aes(y=year, x=date, color=name)) +
geom_line()
# geom_point(shape=21) +
labs(title='Events by Date', y='Object ID') +
theme_bw() + theme(legend.position='bottom')
ggplot(test.storms, aes(y=year, x=date, color=name)) +
geom_point(shape=21) +
labs(title='Events by Date', y='Object ID') +
theme_bw() + theme(legend.position='bottom')
ggplot(test.storms, aes(y=year, x=date, color=name)) +
geom_point(shape=21) +
labs(title='Events by Date', y='Object ID') +
theme_bw() + theme(legend.position='right')
ggplot(test.storms, aes(y=name, x=date, color=name)) +
geom_point(shape=21) +
labs(title='Events by Date', y='Object ID') +
theme_bw() + theme(legend.position='right')
ggplot(yy, aes(y=name, x=date, color=name)) +
geom_point(shape=21) +
labs(title='Events by Date', y='Object ID') +
theme_bw() + theme(legend.position='right')
ggplot(begin.end.storms, aes(y=name, x=date, color=name)) +
geom_point(shape=21) +
labs(title='Events by Date', y='Object ID') +
theme_bw() + theme(legend.position='right')
ggplot(yy, aes(y=name, x=date, color=name)) +
geom_point(shape=21) +
labs(title='Events by Date', y='Object ID') +
theme_bw() + theme(legend.position='right')
yy <- group_by(test.storms, year, name)
yy
ggplot(yy, aes(y=name, x=date, color=status)) +
geom_point(shape=21) +
labs(title='Events by Date', y='Object ID') +
theme_bw() + theme(legend.position='right')
ggplot(set.storms, aes(y=name, x=date, color=status)) +
geom_point(shape=21) +
labs(title='Events by Date', y='Object ID') +
theme_bw() + theme(legend.position='right')
set.storms$name
unique(set.storms$name)
ggplot(set.storms, aes(y=year, x=date, color=status)) +
geom_point(shape=21) +
labs(title='Events by Date', y='Object ID') +
theme_bw() + theme(legend.position='right')
ggplot(test.storms, aes(y=year, x=date, color=status)) +
geom_point(shape=21) +
labs(title='Events by Date', y='Object ID') +
theme_bw() + theme(legend.position='right')
ggplot(test.storms, aes(group = year, y=name, x=date, color=status)) +
geom_point(shape=21) +
labs(title='Events by Date', y='Object ID') +
theme_bw() + theme(legend.position='right')
ggplot(test.storms, aes(y=name, x=date, color=status)) +
geom_point(group = year, shape=21) +
labs(title='Events by Date', y='Object ID') +
theme_bw() + theme(legend.position='right')
tes.stor
test.storms
ggplot(test.storms, aes(group = year, y=name, x=date, color=status)) +
geom_point(shape=21) +
labs(title='Events by Date', y='Object ID') +
theme_bw() + theme(legend.position='right')
ggplot(yy, aes(y=name, x=date, color=status)) +
geom_point(shape=21) +
labs(title='Events by Date', y='Object ID') +
theme_bw() + theme(legend.position='right')
ggplot(yy, aes(group = year, y=name, x=date, color=status)) +
geom_point(shape=21) +
labs(title='Events by Date', y='Object ID') +
theme_bw() + theme(legend.position='right')
ggplot(yy, aes(y=name, x=date, color=status)) +
geom_point(group = year, shape=21) +
labs(title='Events by Date', y='Object ID') +
theme_bw() + theme(legend.position='right')
ggplot(yy, aes(y = name, x = date, color = status)) +
geom_point(shape = 20) +
labs(title='Events by Date', y='Object ID') +
theme_bw() + theme(legend.position='right')
ggplot(yy, aes(y = name, x = date, color = status)) +
geom_point(shape = 20) +
labs(title = "Hurricane Dates & Durations", y = "Storm") +
theme_bw() + theme(legend.position='right')
ggplot(yy, aes(y = name, x = date, color = status)) +
geom_point(shape = 20, aes(group = z)) +
labs(title = "Hurricane Dates & Durations", y = "Storm") +
theme_bw() + theme(legend.position = "right")
ggplot(yy, aes(y = name, x = date, color = status)) +
geom_point(shape = 20, aes(group = year)) +
labs(title = "Hurricane Dates & Durations", y = "Storm") +
theme_bw() + theme(legend.position = "right")
ggplot(yy, aes(y = year, x = date, color = status)) +
geom_point(shape = 20, aes(group = name)) +
labs(title = "Hurricane Dates & Durations", y = "Storm") +
theme_bw() + theme(legend.position = "right")
test.storms
test.storms
ggplot(test.storms, aes(y = name, x = date, color = status)) +
geom_point(shape = 20) +
labs(title = "Hurricane Dates & Durations", y = "Storm") +
theme_bw() + theme(legend.position = "right")
head(set.str)
head(set.storms)
View(set.storms)
ggplot(set.storms, aes(y = year, x = date, color = status)) +
geom_point(shape = 20) +
labs(title = "Hurricane Dates & Durations", y = "Storm") +
theme_bw() + theme(legend.position = "right")
ggplot(test.storms, aes(y = year, x = date, color = status)) +
geom_point(shape = 20) +
labs(title = "Hurricane Dates & Durations", y = "Storm") +
theme_bw() + theme(legend.position = "right")
ggplot(test.storms, aes(y = year, x = date, color = status)) +
#geom_point(shape = 20) +
geom_line() +
labs(title = "Hurricane Dates & Durations", y = "Storm") +
theme_bw() + theme(legend.position = "right")
ggplot(test.storms, aes(y = name, x = date, color = status)) +
#geom_point(shape = 20) +
geom_line() +
labs(title = "Hurricane Dates & Durations", y = "Storm") +
theme_bw() + theme(legend.position = "right")
ggplot(test.storms, aes(y = year, x = date, color = status)) +
geom_point(shape = 20) +
geom_path() +
labs(title = "Hurricane Dates & Durations", y = "Storm") +
theme_bw() + theme(legend.position = "right")
ggplot(test.storms, aes(y = name, x = date, color = status)) +
geom_point(shape = 20) +
geom_path() +
labs(title = "Hurricane Dates & Durations", y = "Storm") +
theme_bw() + theme(legend.position = "right")
ggplot(test.storms, aes(y = name, x = date, color = status)) +
geom_point(shape = 20) +
geom_smooth() +
labs(title = "Hurricane Dates & Durations", y = "Storm") +
theme_bw() + theme(legend.position = "right")
ggplot(test.storms, aes(y = name, x = date, color = status)) +
geom_point(shape = 20) +
# geom_smooth() +
scale_color_viridis(discrete = TRUE) +
labs(title = "Hurricane Dates & Durations", y = "Storm") +
theme_bw() + theme(legend.position = "right")
ggplot(test.storms, aes(y = name, x = date, group = name, color = status)) +
geom_point(shape = 20) +
# geom_smooth() +
scale_color_viridis(discrete = TRUE) +
labs(title = "Hurricane Dates & Durations", y = "Storm") +
theme_bw() + theme(legend.position = "right")
ggplot(test.storms, aes(y = name, x = date, group = name, color = status)) +
geom_point(shape = 20) +
# geom_smooth() +
# scale_color_viridis(discrete = TRUE) +
labs(title = "Hurricane Dates & Durations", y = "Storm") +
theme_bw() + theme(legend.position = "right")
ggplot(test.storms, aes(y = year, x = date, group = name, color = status)) +
geom_point(shape = 20) +
# geom_smooth() +
# scale_color_viridis(discrete = TRUE) +
labs(title = "Hurricane Dates & Durations", y = "Storm") +
theme_bw() + theme(legend.position = "right")
ggplot(test.storms, aes(y = name, x = date, group = year, color = status)) +
geom_point(shape = 20) +
# geom_smooth() +
# scale_color_viridis(discrete = TRUE) +
labs(title = "Hurricane Dates & Durations", y = "Storm") +
theme_bw() + theme(legend.position = "right")
ggplot(test.storms[1:50], aes(y = name, x = date, color = status)) +
geom_point(shape = 20) +
# geom_smooth() +
# scale_color_viridis(discrete = TRUE) +
labs(title = "Hurricane Dates & Durations", y = "Storm") +
theme_bw() + theme(legend.position = "right")
ggplot(test.storms[1:50,], aes(y = name, x = date, color = status)) +
geom_point(shape = 20) +
# geom_smooth() +
# scale_color_viridis(discrete = TRUE) +
labs(title = "Hurricane Dates & Durations", y = "Storm") +
theme_bw() + theme(legend.position = "right")
ggplot(test.storms[50:100,], aes(y = name, x = date, color = status)) +
geom_point(shape = 20) +
# geom_smooth() +
# scale_color_viridis(discrete = TRUE) +
labs(title = "Hurricane Dates & Durations", y = "Storm") +
theme_bw() + theme(legend.position = "right")
ggplot(test.storms[50:100,], aes(y = name, x = date, color = status)) +
# geom_point(shape = 20) +
# geom_smooth() +
# scale_color_viridis(discrete = TRUE) +
geom_segment(aes(x = begin.end.storms$min, xend = begin.end.storms$max , y = event, yend = event), size = 6)
ggplot(test.storms[50:100,], aes(y = name, x = date, color = status)) +
# geom_point(shape = 20) +
# geom_smooth() +
# scale_color_viridis(discrete = TRUE) +
geom_segment(aes(x = begin.end.storms$min, xend = begin.end.storms$max , y = begin.end.storms, yend = begin.end.storms), size = 6)
gp <- ggplot(test.storms, aes(colour = name)) +
geom_segment(aes(x = start, xend = stop , y = event, yend = event), size = 6) +
theme_bw()
begin.end.storms
gp <- ggplot(begin.end.storms, aes(colour = name)) +
geom_segment(aes(x = min, xend = max , y = name, yend = name), size = 6) +
theme_bw()
ggplotly(gp)
ggplot(begin.end.storms, aes(colour = name)) +
geom_segment(aes(x = min, xend = max , y = name, yend = name), size = 6) +
theme_bw()
gp <- ggplot(begin.end.storms, aes(colour = name, group = year)) +
geom_segment(aes(x = min, xend = max , y = name, yend = name), size = 6) +
theme_bw()
gp
gp <- ggplot(begin.end.storms, aes(colour = year)) +
geom_segment(aes(x = min, xend = max , y = name, yend = name), size = 6) +
theme_bw()
ggplot(begin.end.storms, aes(colour = year)) +
geom_segment(aes(x = min, xend = max , y = name, yend = name), size = 6) +
theme_bw()
ggplot(begin.end.storms, aes(colour = year)) +
geom_segment(aes(x = min, xend = max , y = year, yend = year), size = 6) +
theme_bw()
ggplot(begin.end.storms, aes(colour = year)) +
geom_segment(aes(x = min, xend = max , y = name, yend = year), size = 6) +
theme_bw()
ggplot(begin.end.storms, aes(colour = name)) +
geom_segment(aes(x = min, xend = max , y = name, yend = name), size = 6) +
theme_bw()
ggplot(test.storms[50:100,], aes(y = name, x = date, color = status)) +
# geom_point(shape = 20) +
# geom_smooth() +
# scale_color_viridis(discrete = TRUE) +
labs(title = "Hurricane Dates & Durations", y = "Storm") +
theme_bw() + theme(legend.position = "right")
ggplot(test.storms[50:100,], aes(y = name, x = date, color = status)) +
geom_point(shape = 20) +
# geom_smooth() +
# scale_color_viridis(discrete = TRUE) +
labs(title = "Hurricane Dates & Durations", y = "Storm") +
theme_bw() + theme(legend.position = "right")
ggplot(begin.end.storms, aes(colour = name)) +
geom_segment(aes(x = min, xend = max , y = name, yend = name), size = 6) +
theme_bw()
ggplot(test.storms, aes(y = name, x = date, color = status)) +
geom_point(shape = 20) +
# geom_smooth() +
# scale_color_viridis(discrete = TRUE) +
labs(title = "Hurricane Dates & Durations", y = "Storm") +
theme_bw() + theme(legend.position = "right")
ggplot(begin.end.storms, aes(colour = name)) +
geom_segment(aes(x = min, xend = max , y = name, yend = name), size = 6) +
theme_bw()
ggplot(test.storms, aes(colour = name)) +
geom_segment(aes(x = min, xend = max , y = name, yend = name), size = 6) +
theme_bw()
zz <- group_by(set.storms, year, name)
zstorm <- zz %>% summarise(min = min(date), max = max(date))
head(zstorm)
ggplot(zstorm, aes(colour = name)) +
geom_segment(aes(x = min, xend = max , y = name, yend = name), size = 6) +
theme_bw()
ggplot(zstorm, aes(colour = year)) +
geom_segment(aes(x = min, xend = max , y = name, yend = name), size = 6) +
theme_bw()
ggplot(zstorm) +
geom_segment(aes(x = min, xend = max , y = name, yend = name), size = 6) +
theme_bw()
ggplot(zstorm) +
geom_segment(aes(x = min, xend = max , y = year, yend = year), size = 6) +
theme_bw()
ggplot(zstorm) +
geom_segment(aes(x = min, xend = max , y = year, yend = year), size = 2) +
theme_bw()
?coord_flip
ggplot(zstorm) +
geom_segment(aes(x = min, xend = max , y = year, yend = year), size = 2) +
theme_bw() + coord_flip()
ggplot(zstorm) +
geom_segment(aes(x = min, xend = max , y = name, yend = name), size = 2) +
theme_bw() + coord_flip()
as.Date
?as.Date
as.POSIXct
?as.POSIXct
test.storms
as.POSIXct(test.storms$date)
as.POSIXct(test.storms$date, format = "%m-%d")
as.POSIXct(set.storms$date, format = "%m-%d")
as.POSIXct(test.storms$date, format = "%m-%d")set.storms
set.storms
set.storms <- unite(data = storms, col = "date", year, month, day, sep = "-", remove = F)
as.POSIXct(set.storms$date)
set.storms$date <- as.POSIXct(set.storms$date)
test.storms <- set.storms[1:100, ]
head(test.storms)
ggplot(test.storms, aes(y = name, x = date, color = status)) +
geom_point(shape = 20) +
# geom_smooth() +
# scale_color_viridis(discrete = TRUE) +
labs(title = "Hurricane Dates & Durations", y = "Storm") +
theme_bw() + theme(legend.position = "right")
yy <- group_by(test.storms, year, name)
begin.end.storms <- yy %>% summarise(min = as.POSIXct(min(date)), max = max(date))
zz <- group_by(set.storms, year, name)
zstorm <- zz %>% summarise(min = min(date), max = max(date))
########
ggplot(zstorm) +
geom_segment(aes(x = min, xend = max , y = name, yend = name), size = 2) +
theme_bw() + coord_flip()
install.packages("pathtrackr")
install_github("aharmer/pathtrackr", build_vignettes = TRUE)
library(devtools)
install_github("aharmer/pathtrackr", build_vignettes = TRUE)
install_github("aharmer/pathtrackr", build_vignettes = TRUE)
library(devtools)
library(devtools)
install_github("iobis/robis")
library(robis)
install.packages("mapview")
?version
R.version()
version
library(updateR)
install_github('andreacirilloac/updateR')
library(devtools)
install_github('andreacirilloac/updateR')
8+4
AGI <- (3200*8) + (2400*4)
AGI
standard.deduction <- 12,550
standard.deduction <- 12,550
standard.deduction <- 12550
line3 <- AGI - standard.deduction
line3
tax <- (line3 - 9950)*0.12 + 995
tax
(line3 - 9950)
(line3 - 9950)*0.12
+ 995
line12a <- 2519*0.9
line12a
line15 <- line12a/4
line15
ag
AGI <- (3200*8) + (2400*4)
AGI
line7 <- AGI - nc.deduction
nc.deduction <- 10750
line7 <- AGI - nc.deduction
line7
line8 <- line7 * 0.0525
line8
line12 <- line8/4
line12
# Adding watermarks to images for website (jnotar.github.io)
# script & commands copied/used from algae_image_watermarks.R in Coding_fun_sideprojects
#install.packages("extrafont")
library(EBImage)
library(extrafont)
font_import()
setwd("/Users/jnotar/Documents/Website/jnotar.github.io/photography_page/")
install.packages(EBImage)
install.packages("extrafont")
install.packages("extrafont")
library(EBImage)
install.packages(EBImage)
install.packages("EBImage")
library(EBImage)
updateR()
install.packages("updateR")
library(updateR)
library(devtools)
install_github('andreacirilloac/updateR')
library(updateR)
updateR()
library(EBImage)
library(extrafont)
install.packages("BiocManager")
BiocManager::install("EBImage")
list.files()
# Adding watermarks to images for website (jnotar.github.io)
# script & commands copied/used from algae_image_watermarks.R in Coding_fun_sideprojects
# install.packages("extrafont")
# install.packages("BiocManager")
# BiocManager::install("EBImage")
library(EBImage)
library(extrafont)
font_import()
setwd("/Users/jnotar/Documents/Website/jnotar.github.io/photography_page/")
names(pdfFonts()) #list of fonts
list.files()
library(EBImage)
library(extrafont)
install.packages("EBImage")
library(BiocManager)
BiocManager::install("EBImage")
BiocManager::install("EBImage", force = TRUE)
?readImage
warnings()
BiocManager::install("EBImage")
library(EBImage)
